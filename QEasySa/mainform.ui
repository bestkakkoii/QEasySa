<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainFormClass</class>
 <widget class="QMainWindow" name="MainFormClass">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>946</width>
    <height>412</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainForm</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget{
color: rgb(250, 250, 250);
background-color: rgb(31, 31, 31);
}

QToolBar{
color: rgb(250, 250, 250);
background-color: rgb(31, 31, 31);
border:none;
}

QToolButton{
color: rgb(250, 250, 250);
background-color: rgb(31, 31, 31);
border:none;
min-height:30
}

QToolButton::hover{
color: rgb(250, 250, 250);
background-color: rgb(61,61,61);
border: 1px solid rgb(112,112,112);
min-height:30
}

QToolButton:pressed,QToolButton:checked {
color: rgb(250, 250, 250);
background-color: rgb(61,61,61);
border: 1px solid rgb(46,46,46);
min-height:30

}

QStatusBar{
color: rgb(250, 250, 250);
background-color: rgb(31, 31, 31);
border:none;
}

QStatusBar::item {
     border: 0px solid red;
}

QMenuBar{
color: rgb(214,214,214); 
background-color: rgb(31,31,31)
}

QMenuBar::item {
spacing: 0px;
margin-top: 1px;
margin-left: 1px;
padding: 3px 8px;
color: rgb(214,214,214); 
background: transparent;
border-radius: 0px;
width: 65px;
height: 26px;
}

QMenuBar::item:selected{
border:1px solid rgb(112,112,112);background-color:rgb(61,61,61);color:rgb(250,250,250);}

QMenu{background-color:rgb(46, 46, 46); padding:5px; border: 1px solid rgb(66,66,66);}
QMenu::item{color:rgb(214,214,214);padding-left:8px;padding-top:7px;padding-bottom:8px;padding-right:10px;background-color:rgb(46, 46, 46);}
QMenu::item:selected{border:1px solid rgb(112,112,112);color:rgb(250,250,250);background-color:rgb(61,61,61);}
QMenu::item:hover{border:1px solid rgb(112,112,112);background-color:rgb(250,250,250);}
QMenu::item:disabled{background:rgb(46, 46, 46); color:rgb(92,92,92);}
QMenu::QAbstractItemView{color:rgb(214,214,214);padding-left:8px;padding-top:7px;padding-bottom:8px;padding-right:10px;background-color:rgb(46, 46, 46);}

QToolTip{border-style:none; background-color: rgb(57, 58, 60);color: rgb(208, 208, 208);}
</string>
  </property>
  <widget class="QWidget" name="centralWidget">
   <layout class="QGridLayout" name="gridLayout">
    <item row="0" column="0">
     <layout class="QVBoxLayout" name="verticalLayout">
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout">
        <item>
         <widget class="QCheckBox" name="checkBox_EnableFastBattle">
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QCheckBox { color: rgb(208, 208, 208);}</string>
          </property>
          <property name="text">
           <string>快速戰鬥</string>
          </property>
          <property name="checked">
           <bool>true</bool>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="checkBox_EnableAutoBattle">
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QCheckBox { color: rgb(208, 208, 208);}</string>
          </property>
          <property name="text">
           <string>自動戰鬥</string>
          </property>
          <property name="checked">
           <bool>false</bool>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="checkBox_EnableAutoCombat">
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QCheckBox { color: rgb(208, 208, 208);}</string>
          </property>
          <property name="text">
           <string>原地遇敵</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="checkBox_EnableAutoEatMeat">
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="text">
           <string>自動吃肉</string>
          </property>
          <property name="checked">
           <bool>false</bool>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_logout">
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
background-color: rgb(66, 66, 66);
border: 0px solid #dcdfe6;
padding: 3px;
color:rgb(214, 214, 214);
}

QPushButton:hover {
background-color: rgb(64, 53, 130);
color:rgb(250, 250, 250);
}

QPushButton:pressed, QPushButton:checked {
background-color: rgb(145, 131, 238);
color:rgb(250, 250, 250);
}

#button3 {
border-radius: 20px;
}</string>
          </property>
          <property name="text">
           <string>登出</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_logback">
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
background-color: rgb(66, 66, 66);
border: 0px solid #dcdfe6;
padding: 3px;
color:rgb(214, 214, 214);
}

QPushButton:hover {
background-color: rgb(64, 53, 130);
color:rgb(250, 250, 250);
}

QPushButton:pressed, QPushButton:checked {
background-color: rgb(145, 131, 238);
color:rgb(250, 250, 250);
}

#button3 {
border-radius: 20px;
}</string>
          </property>
          <property name="text">
           <string>回點</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_sellall">
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
background-color: rgb(66, 66, 66);
border: 0px solid #dcdfe6;
padding: 3px;
color:rgb(214, 214, 214);
}

QPushButton:hover {
background-color: rgb(64, 53, 130);
color:rgb(250, 250, 250);
}

QPushButton:pressed, QPushButton:checked {
background-color: rgb(145, 131, 238);
color:rgb(250, 250, 250);
}

#button3 {
border-radius: 20px;
}</string>
          </property>
          <property name="text">
           <string>一鍵賣肉/殼</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_joinleave">
          <property name="styleSheet">
           <string notr="true">QPushButton {
background-color: rgb(66, 66, 66);
border: 0px solid #dcdfe6;
padding: 3px;
color:rgb(214, 214, 214);
}

QPushButton:hover {
background-color: rgb(64, 53, 130);
color:rgb(250, 250, 250);
}

QPushButton:pressed, QPushButton:checked {
background-color: rgb(145, 131, 238);
color:rgb(250, 250, 250);
}

#button3 {
border-radius: 20px;
}</string>
          </property>
          <property name="text">
           <string>組隊/離隊</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton">
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
background-color: rgb(66, 66, 66);
border: 0px solid #dcdfe6;
padding: 3px;
color:rgb(214, 214, 214);
}

QPushButton:hover {
background-color: rgb(64, 53, 130);
color:rgb(250, 250, 250);
}

QPushButton:pressed, QPushButton:checked {
background-color: rgb(145, 131, 238);
color:rgb(250, 250, 250);
}

#button3 {
border-radius: 20px;
}</string>
          </property>
          <property name="text">
           <string>元神歸位(EO)</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_3">
        <item>
         <widget class="QCheckBox" name="checkBox_EnableBattleMagicHeal">
          <property name="minimumSize">
           <size>
            <width>90</width>
            <height>0</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QCheckBox { color: rgb(208, 208, 208);}</string>
          </property>
          <property name="text">
           <string>戰鬥補血</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QSpinBox" name="spinBox_BattleMagicHealValue">
          <property name="minimumSize">
           <size>
            <width>90</width>
            <height>0</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::WheelFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QSpinBox {
    padding-top: 2px;
    padding-bottom: 2px;
	padding-left: 4px;
    padding-right: 15px;
  border:1px solid rgb(66,66,66);
 	color:rgb(250,250,250);
  	background: rgb(56,56,56);
	selection-color: rgb(208,208,208);
	selection-background-color: rgb(80, 80, 83);
	font-family: &quot;Microsoft Yahei&quot;;
	font-size: 10pt;
}

QSpinBox:hover {
  color:rgb(250,250,250);
  background: rgb(31,31,31);
   border:1px solid rgb(153,153,153);
}

</string>
          </property>
          <property name="minimum">
           <number>1</number>
          </property>
          <property name="maximum">
           <number>100</number>
          </property>
          <property name="value">
           <number>35</number>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="checkBox_EnableDebugMode">
          <property name="text">
           <string>調試模式</string>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="horizontalSpacer">
          <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>40</width>
            <height>20</height>
           </size>
          </property>
         </spacer>
        </item>
       </layout>
      </item>
      <item>
       <layout class="QHBoxLayout" name="horizontalLayout_2">
        <item>
         <widget class="QCheckBox" name="checkBox_EnableAutoLogin">
          <property name="maximumSize">
           <size>
            <width>90</width>
            <height>16777215</height>
           </size>
          </property>
          <property name="focusPolicy">
           <enum>Qt::NoFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QCheckBox { color: rgb(208, 208, 208);}</string>
          </property>
          <property name="text">
           <string>自動登入</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QComboBox" name="comboBox_userdata">
          <property name="minimumSize">
           <size>
            <width>200</width>
            <height>0</height>
           </size>
          </property>
          <property name="tabletTracking">
           <bool>true</bool>
          </property>
          <property name="focusPolicy">
           <enum>Qt::StrongFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QComboBox:editable{
  color:rgb(250,250,250);
  font-size:12px;
  padding: 1px 15px 1px 3px;
  border:1px solid rgb(66,66,66);
  background: rgb(56,56,56);
}

QComboBox:editable::hover{
  color:rgb(250,250,250);
  font-size:12px;
  padding: 1px 15px 1px 3px;
  border:1px solid rgb(153,153,153);
  background: rgb(31,31,31);
}


/* 未下拉时，QComboBox的样式 */
QComboBox {
    border: 1px solid #424242;   /* 边框 */
    border-radius: 0px;   /* 圆角 */
    /*padding: 1px 13px 1px 3px;    字体填衬 */
    color: rgb(250,250,250);
    /*font: normal normal 15px &quot;Microsoft YaHei&quot;*/;
    background:#383838;
}

QComboBox::hover {
    border: 1px solid #424242;   /* 边框 */
    border-radius: 0px;   /* 圆角 */
    /*padding: 1px 18px 1px 3px;    字体填衬 */
    color: rgb(250,250,250);
    /*font: normal normal 15px &quot;Microsoft YaHei&quot;*/;
    background:#3D3D3D;
}
 
/* 下拉后，整个下拉窗体样式 */
QComboBox QAbstractItemView {
    outline: 0px solid #1F1F1F;   /* 选定项的虚框 */
    border: 1px solid #424242;    /* 整个下拉窗体的边框 */
    color: #FAFAFA;
    background-color: #2E2E2E;   /* 整个下拉窗体的背景色 */
    selection-background-color: #3D3D3D;   /* 整个下拉窗体被选中项的背景色 */
}
 
/* 下拉后，整个下拉窗体每项的样式 */
QComboBox QAbstractItemView::item {
    height: 15px;  /* 项的高度（设置pComboBox-&gt;setView(new QListView());后，该项才起作用） */
	border: 0px solid #707070;
	background-color: #2E2E2E;
}
 
/* 下拉后，整个下拉窗体越过每项的样式 */
QComboBox QAbstractItemView::item:hover {
    color: #FAFAFA;
	border: 1px solid #707070;
    background-color:  #3D3D3D;   /* 整个下拉窗体越过每项的背景色 */
}
 
/* 下拉后，整个下拉窗体被选择的每项的样式 */
QComboBox QAbstractItemView::item:selected {
    color: #FAFAFA;
	/*border: 1px solid #707070;*/
    background-color:  #3D3D3D; 
}


QComboBox QAbstractScrollArea QScrollBar:vertical {
    background: #2E2E2E;
	width:  15px;
	min-height: 60px;  
}

QComboBox QAbstractScrollArea QScrollBar::handle:vertical {
	background: #4D4D4D;
  	border: 3px solid  #2E2E2E;
	width:  15px;
	min-height: 60px;  
}

QComboBox QAbstractScrollArea QScrollBar::handle:hover:vertical,
QComboBox QAbstractScrollArea QScrollBar::handle:pressed:vertical {
    background: #999999; 
}

QComboBox QAbstractScrollArea QScrollBar::sub-page:vertical {
    background: 444444;
}

QComboBox QAbstractScrollArea QScrollBar::add-page:vertical {
    background: 5B5B5B;
}

QComboBox QAbstractScrollArea QScrollBar::add-line:vertical {
    background: none;
}

QComboBox QAbstractScrollArea QScrollBar::sub-line:vertical {
    background: none;
}
 

 
/* 设置为可编辑（setEditable(true)）editable时，编辑区域的样式 */
QComboBox:editable {
    background: #383838;
}
 
/* 设置为非编辑（setEditable(false)）!editable时，整个QComboBox的样式 */
QComboBox:!editable {
    background:#383838;
}
 
/* 设置为可编辑editable时，点击整个QComboBox的样式 */
QComboBox:editable:on {
    background:#383838;
}
 
/* 设置为非编辑!editable时，点击整个QComboBox的样式 */
QComboBox:!editable:on {
    background:#383838;
}
 
/* 设置为可编辑editable时，下拉框的样式 */
QComboBox::drop-down:editable {
    background:#383838;
}
 
/* 设置为可编辑editable时，点击下拉框的样式 */
QComboBox::drop-down:editable:on {
    background:#383838;
}
 
/* 设置为非编辑!editable时，下拉框的样式 */
QComboBox::drop-down:!editable {
    background: #383838;
}
 
/* 设置为非编辑!editable时，点击下拉框的样式 */
QComboBox::drop-down:!editable:on {
    background:#383838;
}
 
/* 点击QComboBox */
QComboBox:on {
}
 
/* 下拉框样式 */
QComboBox::drop-down {
    subcontrol-origin: padding;   /* 子控件在父元素中的原点矩形。如果未指定此属性，则默认为padding。 */
    subcontrol-position: top right;   /* 下拉框的位置（右上） */
    width: 15px;   /* 下拉框的宽度 */
 
    border-left-width: 0px;   /* 下拉框的左边界线宽度 */
    border-left-color: #383838;   /* 下拉框的左边界线颜色 */
    border-left-style: solid;   /* 下拉框的左边界线为实线 */
    border-top-right-radius: 0px;   /* 下拉框的右上边界线的圆角半径（应和整个QComboBox右上边界线的圆角半径一致） */
    border-bottom-right-radius: 0px;   /* 同上 */
}
　/* 越过下拉框样式 */
 
　QComboBox::drop-down:hover {
 
　　　background:#3D3D3D;
 
　}
/* 下拉箭头样式 */ QComboBox::down-arrow {
 width: 15px; /* 下拉箭头的宽度（建议与下拉框drop-down的宽度一致） */ 
background: transparent; /* 下拉箭头的的背景色 */ 
padding: 0px 0px 0px 0px; /* 上内边距、右内边距、下内边距、左内边距 */ 
image: url(:/image/icon_down_arrow.png);
} 

/* 点击下拉箭头 */
 QComboBox::down-arrow:on {
	image: url(:/image/icon_up_arrow.png);
}

</string>
          </property>
          <property name="editable">
           <bool>true</bool>
          </property>
          <property name="placeholderText">
           <string>ACCOUNT</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QComboBox" name="comboBox_userdata_2">
          <property name="minimumSize">
           <size>
            <width>200</width>
            <height>0</height>
           </size>
          </property>
          <property name="tabletTracking">
           <bool>true</bool>
          </property>
          <property name="focusPolicy">
           <enum>Qt::StrongFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QComboBox:editable{
  color:rgb(250,250,250);
  font-size:12px;
  padding: 1px 15px 1px 3px;
  border:1px solid rgb(66,66,66);
  background: rgb(56,56,56);
}

QComboBox:editable::hover{
  color:rgb(250,250,250);
  font-size:12px;
  padding: 1px 15px 1px 3px;
  border:1px solid rgb(153,153,153);
  background: rgb(31,31,31);
}


/* 未下拉时，QComboBox的样式 */
QComboBox {
    border: 1px solid #424242;   /* 边框 */
    border-radius: 0px;   /* 圆角 */
    /*padding: 1px 13px 1px 3px;    字体填衬 */
    color: rgb(250,250,250);
    /*font: normal normal 15px &quot;Microsoft YaHei&quot;*/;
    background:#383838;
}

QComboBox::hover {
    border: 1px solid #424242;   /* 边框 */
    border-radius: 0px;   /* 圆角 */
    /*padding: 1px 18px 1px 3px;    字体填衬 */
    color: rgb(250,250,250);
    /*font: normal normal 15px &quot;Microsoft YaHei&quot;*/;
    background:#3D3D3D;
}
 
/* 下拉后，整个下拉窗体样式 */
QComboBox QAbstractItemView {
    outline: 0px solid #1F1F1F;   /* 选定项的虚框 */
    border: 1px solid #424242;    /* 整个下拉窗体的边框 */
    color: #FAFAFA;
    background-color: #2E2E2E;   /* 整个下拉窗体的背景色 */
    selection-background-color: #3D3D3D;   /* 整个下拉窗体被选中项的背景色 */
}
 
/* 下拉后，整个下拉窗体每项的样式 */
QComboBox QAbstractItemView::item {
    height: 15px;  /* 项的高度（设置pComboBox-&gt;setView(new QListView());后，该项才起作用） */
	border: 0px solid #707070;
	background-color: #2E2E2E;
}
 
/* 下拉后，整个下拉窗体越过每项的样式 */
QComboBox QAbstractItemView::item:hover {
    color: #FAFAFA;
	border: 1px solid #707070;
    background-color:  #3D3D3D;   /* 整个下拉窗体越过每项的背景色 */
}
 
/* 下拉后，整个下拉窗体被选择的每项的样式 */
QComboBox QAbstractItemView::item:selected {
    color: #FAFAFA;
	/*border: 1px solid #707070;*/
    background-color:  #3D3D3D; 
}


QComboBox QAbstractScrollArea QScrollBar:vertical {
    background: #2E2E2E;
	width:  15px;
	min-height: 60px;  
}

QComboBox QAbstractScrollArea QScrollBar::handle:vertical {
	background: #4D4D4D;
  	border: 3px solid  #2E2E2E;
	width:  15px;
	min-height: 60px;  
}

QComboBox QAbstractScrollArea QScrollBar::handle:hover:vertical,
QComboBox QAbstractScrollArea QScrollBar::handle:pressed:vertical {
    background: #999999; 
}

QComboBox QAbstractScrollArea QScrollBar::sub-page:vertical {
    background: 444444;
}

QComboBox QAbstractScrollArea QScrollBar::add-page:vertical {
    background: 5B5B5B;
}

QComboBox QAbstractScrollArea QScrollBar::add-line:vertical {
    background: none;
}

QComboBox QAbstractScrollArea QScrollBar::sub-line:vertical {
    background: none;
}
 

 
/* 设置为可编辑（setEditable(true)）editable时，编辑区域的样式 */
QComboBox:editable {
    background: #383838;
}
 
/* 设置为非编辑（setEditable(false)）!editable时，整个QComboBox的样式 */
QComboBox:!editable {
    background:#383838;
}
 
/* 设置为可编辑editable时，点击整个QComboBox的样式 */
QComboBox:editable:on {
    background:#383838;
}
 
/* 设置为非编辑!editable时，点击整个QComboBox的样式 */
QComboBox:!editable:on {
    background:#383838;
}
 
/* 设置为可编辑editable时，下拉框的样式 */
QComboBox::drop-down:editable {
    background:#383838;
}
 
/* 设置为可编辑editable时，点击下拉框的样式 */
QComboBox::drop-down:editable:on {
    background:#383838;
}
 
/* 设置为非编辑!editable时，下拉框的样式 */
QComboBox::drop-down:!editable {
    background: #383838;
}
 
/* 设置为非编辑!editable时，点击下拉框的样式 */
QComboBox::drop-down:!editable:on {
    background:#383838;
}
 
/* 点击QComboBox */
QComboBox:on {
}
 
/* 下拉框样式 */
QComboBox::drop-down {
    subcontrol-origin: padding;   /* 子控件在父元素中的原点矩形。如果未指定此属性，则默认为padding。 */
    subcontrol-position: top right;   /* 下拉框的位置（右上） */
    width: 15px;   /* 下拉框的宽度 */
 
    border-left-width: 0px;   /* 下拉框的左边界线宽度 */
    border-left-color: #383838;   /* 下拉框的左边界线颜色 */
    border-left-style: solid;   /* 下拉框的左边界线为实线 */
    border-top-right-radius: 0px;   /* 下拉框的右上边界线的圆角半径（应和整个QComboBox右上边界线的圆角半径一致） */
    border-bottom-right-radius: 0px;   /* 同上 */
}
　/* 越过下拉框样式 */
 
　QComboBox::drop-down:hover {
 
　　　background:#3D3D3D;
 
　}
/* 下拉箭头样式 */ QComboBox::down-arrow {
 width: 15px; /* 下拉箭头的宽度（建议与下拉框drop-down的宽度一致） */ 
background: transparent; /* 下拉箭头的的背景色 */ 
padding: 0px 0px 0px 0px; /* 上内边距、右内边距、下内边距、左内边距 */ 
image: url(:/image/icon_down_arrow.png);
} 

/* 点击下拉箭头 */
 QComboBox::down-arrow:on {
	image: url(:/image/icon_up_arrow.png);
}

</string>
          </property>
          <property name="editable">
           <bool>true</bool>
          </property>
          <property name="placeholderText">
           <string>PASSWORD</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QComboBox" name="comboBox_userdata_3">
          <property name="focusPolicy">
           <enum>Qt::WheelFocus</enum>
          </property>
          <property name="styleSheet">
           <string notr="true">QComboBox:editable{
  color:rgb(250,250,250);
  font-size:12px;
  padding: 1px 15px 1px 3px;
  border:1px solid rgb(66,66,66);
  background: rgb(56,56,56);
}

QComboBox:editable::hover{
  color:rgb(250,250,250);
  font-size:12px;
  padding: 1px 15px 1px 3px;
  border:1px solid rgb(153,153,153);
  background: rgb(31,31,31);
}


/* 未下拉时，QComboBox的样式 */
QComboBox {
    border: 1px solid #424242;   /* 边框 */
    border-radius: 0px;   /* 圆角 */
    /*padding: 1px 13px 1px 3px;    字体填衬 */
    color: rgb(250,250,250);
    /*font: normal normal 15px &quot;Microsoft YaHei&quot;*/;
    background:#383838;
}

QComboBox::hover {
    border: 1px solid #424242;   /* 边框 */
    border-radius: 0px;   /* 圆角 */
    /*padding: 1px 18px 1px 3px;    字体填衬 */
    color: rgb(250,250,250);
    /*font: normal normal 15px &quot;Microsoft YaHei&quot;*/;
    background:#3D3D3D;
}
 
/* 下拉后，整个下拉窗体样式 */
QComboBox QAbstractItemView {
    outline: 0px solid #1F1F1F;   /* 选定项的虚框 */
    border: 1px solid #424242;    /* 整个下拉窗体的边框 */
    color: #FAFAFA;
    background-color: #2E2E2E;   /* 整个下拉窗体的背景色 */
    selection-background-color: #3D3D3D;   /* 整个下拉窗体被选中项的背景色 */
}
 
/* 下拉后，整个下拉窗体每项的样式 */
QComboBox QAbstractItemView::item {
    height: 15px;  /* 项的高度（设置pComboBox-&gt;setView(new QListView());后，该项才起作用） */
	border: 0px solid #707070;
	background-color: #2E2E2E;
}
 
/* 下拉后，整个下拉窗体越过每项的样式 */
QComboBox QAbstractItemView::item:hover {
    color: #FAFAFA;
	border: 1px solid #707070;
    background-color:  #3D3D3D;   /* 整个下拉窗体越过每项的背景色 */
}
 
/* 下拉后，整个下拉窗体被选择的每项的样式 */
QComboBox QAbstractItemView::item:selected {
    color: #FAFAFA;
	/*border: 1px solid #707070;*/
    background-color:  #3D3D3D; 
}


QComboBox QAbstractScrollArea QScrollBar:vertical {
    background: #2E2E2E;
	width:  15px;
	min-height: 60px;  
}

QComboBox QAbstractScrollArea QScrollBar::handle:vertical {
	background: #4D4D4D;
  	border: 3px solid  #2E2E2E;
	width:  15px;
	min-height: 60px;  
}

QComboBox QAbstractScrollArea QScrollBar::handle:hover:vertical,
QComboBox QAbstractScrollArea QScrollBar::handle:pressed:vertical {
    background: #999999; 
}

QComboBox QAbstractScrollArea QScrollBar::sub-page:vertical {
    background: 444444;
}

QComboBox QAbstractScrollArea QScrollBar::add-page:vertical {
    background: 5B5B5B;
}

QComboBox QAbstractScrollArea QScrollBar::add-line:vertical {
    background: none;
}

QComboBox QAbstractScrollArea QScrollBar::sub-line:vertical {
    background: none;
}
 

 
/* 设置为可编辑（setEditable(true)）editable时，编辑区域的样式 */
QComboBox:editable {
    background: #383838;
}
 
/* 设置为非编辑（setEditable(false)）!editable时，整个QComboBox的样式 */
QComboBox:!editable {
    background:#383838;
}
 
/* 设置为可编辑editable时，点击整个QComboBox的样式 */
QComboBox:editable:on {
    background:#383838;
}
 
/* 设置为非编辑!editable时，点击整个QComboBox的样式 */
QComboBox:!editable:on {
    background:#383838;
}
 
/* 设置为可编辑editable时，下拉框的样式 */
QComboBox::drop-down:editable {
    background:#383838;
}
 
/* 设置为可编辑editable时，点击下拉框的样式 */
QComboBox::drop-down:editable:on {
    background:#383838;
}
 
/* 设置为非编辑!editable时，下拉框的样式 */
QComboBox::drop-down:!editable {
    background: #383838;
}
 
/* 设置为非编辑!editable时，点击下拉框的样式 */
QComboBox::drop-down:!editable:on {
    background:#383838;
}
 
/* 点击QComboBox */
QComboBox:on {
}
 
/* 下拉框样式 */
QComboBox::drop-down {
    subcontrol-origin: padding;   /* 子控件在父元素中的原点矩形。如果未指定此属性，则默认为padding。 */
    subcontrol-position: top right;   /* 下拉框的位置（右上） */
    width: 15px;   /* 下拉框的宽度 */
 
    border-left-width: 0px;   /* 下拉框的左边界线宽度 */
    border-left-color: #383838;   /* 下拉框的左边界线颜色 */
    border-left-style: solid;   /* 下拉框的左边界线为实线 */
    border-top-right-radius: 0px;   /* 下拉框的右上边界线的圆角半径（应和整个QComboBox右上边界线的圆角半径一致） */
    border-bottom-right-radius: 0px;   /* 同上 */
}
　/* 越过下拉框样式 */
 
　QComboBox::drop-down:hover {
 
　　　background:#3D3D3D;
 
　}
/* 下拉箭头样式 */ QComboBox::down-arrow {
 width: 15px; /* 下拉箭头的宽度（建议与下拉框drop-down的宽度一致） */ 
background: transparent; /* 下拉箭头的的背景色 */ 
padding: 0px 0px 0px 0px; /* 上内边距、右内边距、下内边距、左内边距 */ 
image: url(:/image/icon_down_arrow.png);
} 

/* 点击下拉箭头 */
 QComboBox::down-arrow:on {
	image: url(:/image/icon_up_arrow.png);
}

</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_userdata">
          <property name="minimumSize">
           <size>
            <width>20</width>
            <height>20</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>20</width>
            <height>20</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
background-color: rgb(66, 66, 66);
border: 0px solid #dcdfe6;
padding: 3px;
color:rgb(214, 214, 214);
}

QPushButton:hover {
background-color: rgb(64, 53, 130);
color:rgb(250, 250, 250);
}

QPushButton:pressed, QPushButton:checked {
background-color: rgb(145, 131, 238);
color:rgb(250, 250, 250);
}

#button3 {
border-radius: 20px;
}</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="icon">
           <iconset resource="Resource.qrc">
            <normaloff>:/image/icon_directory.png</normaloff>:/image/icon_directory.png</iconset>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="pushButton_userdatarefresh">
          <property name="minimumSize">
           <size>
            <width>20</width>
            <height>20</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>20</width>
            <height>20</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
background-color: rgb(66, 66, 66);
border: 0px solid #dcdfe6;
padding: 3px;
color:rgb(214, 214, 214);
}

QPushButton:hover {
background-color: rgb(64, 53, 130);
color:rgb(250, 250, 250);
}

QPushButton:pressed, QPushButton:checked {
background-color: rgb(145, 131, 238);
color:rgb(250, 250, 250);
}

#button3 {
border-radius: 20px;
}</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="icon">
           <iconset resource="Resource.qrc">
            <normaloff>:/image/icon_restart.png</normaloff>:/image/icon_restart.png</iconset>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item>
       <widget class="ListView" name="listView">
        <property name="focusPolicy">
         <enum>Qt::StrongFocus</enum>
        </property>
        <property name="styleSheet">
         <string notr="true">QListView {
    background: rgb(31,31,31);
    border: 1px solid rgb(61,61,61);
    alternate-background-color: #525252;
    gridline-color: transparent;
	outline:none;
}

QListView QTableCornerButton::section {
    background: rgb(31,31,31);
    border: 0px solid #418bc9;/*边框*/
    border-radius:0px;/*边框圆角*/
    border-color: rgb(41, 139, 201);/*边框颜色*/
    font: bold 11pt;/*字体大小*/
    padding:12px 0 0 10px;/*内边距*/
 }

QListView::item {
    background: rgb(31,31,31);
}

QListView::item:selected {
    background:rgb(61,61,61); /* qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #484848, stop:1 #383838);*/
}

QListView::item:hover {
    background:rgb(61,61,61);
}

QHeaderView {
    text-align: center;
    background: rgb(31,31,31);
    padding: 0px;
    margin: 0px;
    border: 0px solid rgb(61,61,61);

}

QHeaderView::section::vertical {
    text-align: center;
    background: rgb(31,31,31);
    padding: 3px;
    margin: 0px;
    border: 0px solid rgb(61,61,61);
    border-left-width: 0;
	border-bottom-width: 1;
	border-right-width: 1;
}

QHeaderView::section::horizontal{
    text-align: center;
    background: rgb(31,31,31);
    padding: 3px;
    margin: 0px;
    border: 0px solid rgb(61,61,61);
    border-left-width: 0;
	border-bottom-width: 1;
	border-right-width: 1;
}

QScrollBar:vertical {
    background: rgb(46,46,46);
	width: 20px;
	height:20px;
}

QScrollBar::handle:vertical {
    background: rgb(71,71,71);
  	border: 3px solid  rgb(46,46,46);
}

QScrollBar::handle:hover:vertical,
QScrollBar::handle:pressed:vertical {
    background: rgb(153,153,153);
}

QScrollBar::sub-page:vertical {
	height:9px;
    background: 444444;
}

QScrollBar::add-page:vertical {
	height:9px;
    background: 5B5B5B;
}

QScrollBar::add-line:vertical {
	height:9px;
    background: none;
}

QScrollBar::sub-line:vertical {
	height:9px;
    background: none;
}

QScrollBar:horizontal {
    background: rgb(46,46,46);
}

QScrollBar::handle:horizontal {
    background: rgb(71,71,71);
  	border: 3px solid  rgb(46,46,46);
}

QScrollBar::handle:hover:horizontal,
QScrollBar::handle:pressed:horizontal {
    background: rgb(153,153,153);
}

QScrollBar::sub-page:horizontal {
    background: 444444;
}

QScrollBar::add-page:horizontal {
    background: 5B5B5B;
}

QScrollBar::add-line:horizontal {
    background: none;
}

QScrollBar::sub-line:horizontal {
    background: none;
}

QToolTip{
border-style:none; 
background-color: rgb(57, 58, 60);
color: rgb(208, 208, 208);
}</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QLineEdit" name="lineEdit_chat">
        <property name="styleSheet">
         <string notr="true">QLineEdit{
  color:rgb(250,250,250);
  font-size:12px;
  padding: 1px 15px 1px 3px;
  border:1px solid rgb(66,66,66);
  background: rgb(56,56,56);
}

QLineEdit::hover{
  color:rgb(250,250,250);
  font-size:12px;
  padding: 1px 15px 1px 3px;
  border:1px solid rgb(153,153,153);
  background: rgb(31,31,31);
}
</string>
        </property>
       </widget>
      </item>
     </layout>
    </item>
   </layout>
  </widget>
  <widget class="QStatusBar" name="statusBar"/>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <customwidgets>
  <customwidget>
   <class>ListView</class>
   <extends>QListView</extends>
   <header location="global">listview.h</header>
  </customwidget>
 </customwidgets>
 <resources>
  <include location="Resource.qrc"/>
 </resources>
 <connections/>
</ui>
